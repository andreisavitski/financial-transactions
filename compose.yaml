networks:
  web3:
    driver: bridge

services:
  #  financial-transactions-backend:
  #    image: financial-transactions-backend:latest
  #    container_name: financial-transactions-backend
  #    ports:
  #      - "8085:8085"
  #    environment:
  #      - SPRING_DATASOURCE_URL=jdbc:postgresql://bankdb:5432/bankdb
  #      - POSTGRES_USER=${DB_USER:-postgres}
  #      - POSTGRES_PASSWORD=${DB_PASSWORD:-sa}
  #      - eureka.client.serviceUrl.defaultZone=http://eureka-server:8761/eureka/
  #    depends_on:
  #      - authorization-backend
  #    networks:
  #      - web3

  #  card-backend:
  #    image: card-backend:latest
  #    container_name: card-backend
  #    ports:
  #      - "8084:8084"
  #    environment:
  #      - SPRING_DATASOURCE_URL=jdbc:postgresql://bankdb:5432/bankdb
  #      - POSTGRES_USER=${DB_USER:-postgres}
  #      - POSTGRES_PASSWORD=${DB_PASSWORD:-sa}
  #      - eureka.client.serviceUrl.defaultZone=http://eureka-server:8761/eureka/
  #    depends_on:
  #      - bankdb
  #      - authorization-backend
  #    networks:
  #      - web3

#  authorization-backend:
#    image: authorization-backend:latest
#    container_name: authorization-backend
#    ports:
#      - "8083:8083"
#    environment:
#      - SPRING_DATASOURCE_URL=jdbc:postgresql://bankdb:5432/bankdb
#      - POSTGRES_USER=${DB_USER:-postgres}
#      - POSTGRES_PASSWORD=${DB_PASSWORD:-sa}
#      - eureka.client.serviceUrl.defaultZone=http://eureka-server:8761/eureka/
#    depends_on:
#      - bankdb
#    networks:
#      - web3

  bankdb:
    image: postgres:14.9
    container_name: bankdb
    environment:
      - POSTGRES_DB=bankdb
      - POSTGRES_USER=${DB_USER:-postgres}
      - POSTGRES_PASSWORD=${DB_PASSWORD:-sa}
      - PGDATA=/var/lib/postgresql/data/pgdata
    ports:
      - "5433:5432"
    volumes:
      - ./data/db-data:/var/lib/postgresql/data/pgdata
    networks:
      - web3

  actiondb:
    image: mongo:latest
    container_name: actiondb
    restart: always
    environment:
      - MONGO_INITDB_DATABASE=actiondb
    ports:
      - "27018:27017"
    volumes:
      - mongo-data:/data/db
    networks:
      - web3

  rabbitmq:
    image: rabbitmq:3-management-alpine
    container_name: rabbitmq
    environment:
      RABBITMQ_DEFAULT_USER: admin
      RABBITMQ_DEFAULT_PASS: admin
    ports:
      - "5672:5672"
      - "15672:15672"
    volumes:
      - ./data/rabbitmq/data/:/var/lib/rabbitmq/
      - ./data/rabbitmq/log/:/var/log/rabbitmq
    networks:
      - web3

  elasticsearch:
    image: elasticsearch:7.16.2
    container_name: elasticsearch
    ports:
      - "9200:9200"
    environment:
      xpack.security.enabled: false
      discovery.type: single-node
      ES_JAVA_OPTS: "-Xmx256m -Xms256m"
      bootstrap.memory_lock: true
    volumes:
      - elasticsearch-data:/usr/share/elasticsearch/data
    networks:
      - web3

  logstash:
    image: logstash:7.16.2
    container_name: logstash
    depends_on:
      - elasticsearch
    ports:
      - "5044:5044"
      - "5000:5000/tcp"
      - "5000:5000/udp"
      - "9600:9600"
    environment:
      LS_JAVA_OPTS: -Xmx256m -Xms256m
    volumes:
      - ./logstash/config/logstash.yml:/usr/share/logstash/config/logstash.yml:ro
      - ./logstash/pipeline:/usr/share/logstash/pipeline:ro
    networks:
      - web3

  kibana:
    image: kibana:7.16.2
    container_name: kibana
    depends_on:
      - elasticsearch
    ports:
      - "5601:5601"
    environment:
        ELASTICSEARCH_URL: http://elasticsearch:9200
        ELASTICSEARCH_HOSTS: '["http://elasticsearch:9200"]'
    networks:
      - web3

volumes:
  mongo-data:
  elasticsearch-data:
    driver: local